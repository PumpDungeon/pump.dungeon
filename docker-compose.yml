services:
  dungeon-service:
    image: node:alpine
    volumes:
      - ./dungeon-service:/usr/src/app
    working_dir: /usr/src/app
    command: sh -c "npm install && npm start"
    ports:
      - "3000:3000"

  fight-service:
    image: node:alpine
    volumes:
      - ./fight-service:/usr/src/app
    working_dir: /usr/src/app
    command: sh -c "npm install && npm start"
    ports:
      - "3001:3001"
    environment:
      - PLAYER_SERVICE_URL=http://player-service:3002
      - RABBITMQ_HOST=rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      player-service:
        condition: service_started
      
  player-service:
    image: node:alpine
    volumes:
      - ./player-service:/usr/src/app
    working_dir: /usr/src/app
    command: sh -c "npm install && npm start"
    ports:
      - "3002:3002"
    environment:
      - MONGO_URL=mongodb://player-db:27017
      - RABBITMQ_HOST=rabbitmq:5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      player-db:
        condition: service_started

  player-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - player-db-data:/data/db
      - ./player-service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  front-service:
    build: ./front-service
    ports:
      - "80:80"
    depends_on:
      - dungeon-service
      - fight-service
      - player-service

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "5672:5672"  # RabbitMQ main port
      - "15672:15672"  # RabbitMQ management UI
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 2s
      retries: 10

volumes:
  player-db-data: